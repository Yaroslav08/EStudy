@model EStudy.Application.ViewModels.Group.GroupMemberModel

@{
    ViewData["Title"] = "AddMember";
    List<EStudy.Application.ViewModels.User.UserShortViewModel> students = ViewBag.Students as List<EStudy.Application.ViewModels.User.UserShortViewModel>;
}

<div class="jumbotron">
    <div class="col-md-4">
        <form asp-action="AddMember">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="GroupId" class="form-control" type="hidden" />
            </div>
            @if (students == null || students.Count == 0) { }
            else
            {
                <div class="form-group">
                    <label asp-for="MemberId" class="control-label"></label>
                    <select asp-for="MemberId" class="form-control"
                            asp-items="@(new SelectList(ViewBag.Students, "Id", "Fullname"))"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MemberRole" class="control-label"></label>
                    <input asp-for="MemberRole" class="form-control" />
                    <span asp-validation-for="MemberRole" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            }
        </form>
    </div>
</div>

<div>
    <a asp-action="GetAllGroups">Повернутися до списку</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
